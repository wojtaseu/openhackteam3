# Example Build Pipeline for NuGet Publishing
# Include versioning of packages and assemblies
# Publish and promote to specific view
# Use templates for repeatability


trigger: none

pool:
  vmImage: 'windows-latest'

# Set the name property which is the $(Build.BuildNumber)
name: '$(majorVersion).$(minorVersion).$(DayOfYear)$(rev:.r)'

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  project: ''
  repoPath: '/FunctionAppOpenHack/*'
  solution: '/FunctionAppOpenHack/FunctionAppOpenHack.sln'


steps:
- checkout: self

#Actual build steps
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:RunCodeAnalysis=false /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArchitecture: x64

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  continueOnError: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'drop'
  condition: succeededOrFailed()